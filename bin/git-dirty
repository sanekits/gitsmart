#!/bin/bash
# Return 0 if repo is 'dirty' in any way: new files, uncommitted changes, or differs from upstream


#shellcheck disable=2154
PS4='$( _0=$?; exec 2>/dev/null; realpath -- "${BASH_SOURCE[0]:-?}:${LINENO} ^$_0 ${FUNCNAME[0]:-?}()=>" ) '

function errExit {
    echo "ERROR: $*" >&2
    exit 1
}

function git_status_dirty {
    # Return 0 if there's dirty files in $1 dir
    (
        cd "$1" \
            || exit 1 # Not a dir we can cd into
        git status -s &>/dev/null \
            || exit 1 # not a working tree
        dirtyfiles="$(git status -s | wc -l )"
        [[ ${dirtyfiles} -eq 0 ]] \
            && exit 1  # No dirty files

        [[ -t 1 ]] \
            && echo "${dirtyfiles} item(s) are modified or untracked." >&2
            # ... if there's a terminal attached, notify user

        exit 0  # Yes: there are dirty files
    )
    return $?
}


if [[ -z $sourceMe ]]; then
    [[ $# -eq 0 ]] && {
        set -- "$PWD"
    }
    for xdir; do
        if git_status_dirty "$xdir"; then
            exit 0
        fi
    done
    exit 1
fi
